#################################
#             Shadows           #
#################################

# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the window rules.
#
# Can be set per-window using rules.
#
# Default: false
shadow = true

# The blur radius for shadows, in pixels.
#
# Default: 12
shadow-radius = 7

# The opacity of shadows.
#
# Range: 0.0 - 1.0
# Default: 0.75
shadow-opacity = 0.75

# The left offset for shadows, in pixels.
#
# Default: -15
shadow-offset-x = -7

# The top offset for shadows, in pixels.
#
# Default: -15
shadow-offset-y = -7

# Hex string color value of shadow. Formatted like "#RRGGBB", e.g. "#C0FFEE".
#
# Default: #000000
shadow-color = "#000000"

# Crop shadow of a window fully on a particular monitor to that monitor. This is
# currently implemented using the X RandR extension.
#
# Default: false
crop-shadow-to-monitor = false


#################################
#           Fading              #
#################################

# Fade windows in/out when opening/closing and when opacity changes,
# unless no-fading-openclose is used. Can be set per-window using rules.
#
# Default: false
fading = true

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
fade-in-step = 0.03

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
fade-out-step = 0.03

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
fade-delta = 5

# Do not fade on window open/close.
no-fading-openclose = false

# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.
no-fading-destroyed-argb = false


#################################
#   Transparency / Opacity      #
#################################

# Opacity of window titlebars and borders.
#
# Range: 0.1 - 1.0
# Default: 1.0 (disabled)
frame-opacity = 0.7

# Use fixed inactive dim value, instead of adjusting according to window opacity.
#
# Default: false
inactive-dim-fixed = false


#################################
#           Corners             #
#################################

# Sets the radius of rounded window corners. When > 0, the compositor will
# round the corners of windows. Does not interact well with
# `transparent-clipping`.
#
# Default: 0 (disabled)
corner-radius = 10


#################################
#            Blur               #
#################################

# The blur method to use when blurring the background. Available choices are:
#    - none
#    - gaussian
#    - box
#    - kernel
#    - dual_kawase
blur-method = "dual_kawase"

# (For 'gaussian' method) the size of the blur kernel.
#
# Default: 3
#blur-size = 12

# (For 'gaussian' method) the standard deviation of the blur kernel.
#
# Default: 0.84089642
#blur-deviation = 0.84089642

# (For 'kernel' method) specify the blur convolution kernel, with the following
# format:
#    blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
# Can also be a pre-defined kernel, see the man page.
#
# Default: ""
#blur-kern = "3x3box"

# (For 'dual_kawase' method) the strength of the blur method.
#
# Range: 0 - 20
# Default: 5
blur-strength = 3

# Blur background of semi-transparent / ARGB windows.
#
# Can be set per-window using rules.
#
# Default: false
blur-background = true

# Blur background of windows when the window frame is not opaque.
#
# Implies:
#    blur-background
#
# Default: false
blur-background-frame = false

# Use fixed blur strength rather than adjusting according to window opacity.
#
# Default: false
blur-background-fixed = false


#################################
#       General Settings        #
#################################

# Enable remote control via D-Bus. See the man page for more details.
#
# Default: false
dbus = false

# Daemonize process. Fork to background after initialization. Causes issues with
# certain (badly-written) drivers.
daemon = false

# Specify the backend to use: `xrender`, `glx`, or `egl`.
#
# Default: "xrender"
backend = "glx"

# Use higher precision during rendering, and apply dither when presenting the
# rendered screen. Reduces banding artifacts, but may cause performance
# degradation. Only works with OpenGL.
dithered-present = false

# Enable/disable VSync.
#
# Default: false
vsync = true

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
#
# Has nothing to do with `corner-radius`.
#
# Default: false
detect-rounded-corners = true

# Detect '_NET_WM_WINDOW_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows.
#
# Default: false
detect-client-opacity = true

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window,
# rather than listening to 'FocusIn'/'FocusOut' event. May be more accurate,
# provided that the WM supports it.
#
# Default: false
use-ewmh-active-win = true

# Unredirect all windows if a full-screen opaque window is detected,
# to maximize performance for full-screen windows. Known to cause flickering
# when redirecting/unredirecting windows.
#
# Default: false
unredir-if-possible = false

# Delay before unredirecting the window, in milliseconds.
#
# Default: 0.
unredir-if-possible-delay = 0

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows
# in the same group focused at the same time.
#
# Default: false
detect-transient = true

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same
# group focused at the same time. This usually means windows from the same application
# will be considered focused or unfocused at the same time.
# 'WM_TRANSIENT_FOR' has higher priority if detect-transient is enabled, too.
#
# Default: false
detect-client-leader = false

# Use of damage information for rendering. This cause the only the part of the
# screen that has actually changed to be redrawn, instead of the whole screen
# every time. Should improve performance.
#
# Default: false
use-damage = true

# Use X Sync fence to wait for the completion of rendering of other windows,
# before using their content to render the current screen.
#
# Required for explicit sync drivers, such as nvidia.
#
# Default: false
xrender-sync-fence = false

# GLX backend: Use specified GLSL fragment shader for rendering window
# contents. Read the man page for a detailed explanation of the interface.
#
# Can be set per-window using rules.
window-shader-fg = "default"

# Force all windows to be painted with blending. Useful if you
# have a `window-shader-fg` that could turn opaque pixels transparent.
#
# Default: false
force-win-blend = false

# Do not use EWMH to detect fullscreen windows.
# Reverts to checking if a window is fullscreen based only on its size and
# coordinates.
#
# Default: false
# no-ewmh-fullscreen = false

# Dimming bright windows so their brightness doesn't exceed this set value.
# Brightness of a window is estimated by averaging all pixels in the window,
# so this could comes with a performance hit.
# Setting this to 1.0 disables this behaviour. Requires --use-damage to be
# disabled.
#
# Default: 1.0 (disabled)
max-brightness = 1.0

# Make transparent windows clip other windows like non-transparent windows do,
# instead of blending on top of them. e.g. placing a transparent window on top
# of another window will cut a "hole" in that window, and show the desktop
# background underneath.
#
# Default: false
transparent-clipping = false

# Set the log level. Possible values are:
#    "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case insensitive.
# If using the "TRACE" log level, it's better to log into a file
# using *--log-file*, since it can generate a huge stream of logs.
#
# Default: "warn"
log-level = "warn"

# Set the log file.
# If *--log-file* is never specified, logs will be written to stderr.
# Otherwise, logs will to written to the given file, though some of the early
# logs might still be written to the stderr.
# When setting this option from the config file, it is recommended to use an absolute path.
#log-file = "/path/to/your/log/file"

# Write process ID to a file.
#write-pid-path = "/path/to/your/log/file"


#################################
#        Window Rules           #
#################################

# Rule-based per-window options.
#
# See WINDOW RULES section in the man page for how these work.
rules = (
    # System and utility windows that should not be decorated by picom.
    {
        match =
            "window_type = 'combo' ||"
            "window_type = 'desktop' ||"
            "window_type = 'dnd' ||"
            "window_type = 'menu' ||"
            "window_type = 'popup_menu' ||"
            "window_type = 'toolbar' ||"
            "window_type = 'tooltip' ||"
            "window_type = 'utility' ||"
            "_GTK_FRAME_EXTENTS@"
        blur-background = false
        corner-radius = 0
        opacity = 1.0
        shadow = false
    },
    # Regular application windows.
    {
        match = "window_type = 'normal'"
    },
    # XSecureLock Dimmer gadget.
    {
        match = "class_g = 'xsecurelock-dimmer'"
        blur-background = false
    },
)


#################################
#          Animations           #
#################################

# Advanced animation scripts.
#
# See ANIMATIONS section in the man page for how these work.
animations = ()


#################################
#           Includes            #
#################################

# `@include` directive can be used to include additional configuration files.
# Relative paths are search either in the parent of this configuration file
# (when the configuration is loaded through a symlink, the symlink will be
# resolved first). Or in `$XDG_CONFIG_HOME/picom/include`.
#@include "extra.conf"
